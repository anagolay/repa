{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.29.2",
    "schemaVersion": 1009,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@anagolay/repa!",
  "docComment": "/**\n * repa - RElay and PAra chain setup\n *\n * @remarks\n *\n * We will re-export some of the packages that everybody will need.\n *\n * @packageDocumentation\n */\n",
  "name": "@anagolay/repa",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@anagolay/repa!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!buildSpec:function(1)",
          "docComment": "/**\n * Build the plain specs\n *\n * @param config - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function buildSpec(config: "
            },
            {
              "kind": "Reference",
              "text": "IRepaConfig",
              "canonicalReference": "@anagolay/repa!IRepaConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelayPlainSpec",
              "canonicalReference": "@anagolay/repa!RelayPlainSpec:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "buildSpec"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!buildSpecRaw:function(1)",
          "docComment": "/**\n * Build RAW specs based on the updated specs\n *\n * @param config - \n *\n * @param specFileName - \n *\n * @param outputDir - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function buildSpecRaw(config: "
            },
            {
              "kind": "Reference",
              "text": "IRepaConfig",
              "canonicalReference": "@anagolay/repa!IRepaConfig:interface"
            },
            {
              "kind": "Content",
              "text": ", specFileName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", outputDir: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RawRelayChainSpec",
              "canonicalReference": "@anagolay/repa!RawRelayChainSpec:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "specFileName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "outputDir",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "buildSpecRaw"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@anagolay/repa!configFileName:var",
          "docComment": "/**\n * Config file name\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "configFileName: "
            },
            {
              "kind": "Content",
              "text": "\"repa.yml\""
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "configFileName",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!createAccount:function(1)",
          "docComment": "/**\n * Create accounts based on suri\n *\n * @param suri - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createAccount(suri: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IAccountForSpec",
              "canonicalReference": "@anagolay/repa!IAccountForSpec:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "suri",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createAccount"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!dockerRun:function(1)",
          "docComment": "/**\n * docker run ....\n *\n * @param image - \n *\n * @param before - \n *\n * @param after - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dockerRun(image: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", before: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", after: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "image",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "before",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "after",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "dockerRun"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!exec:function(1)",
          "docComment": "/**\n * Execute shell command\n *\n * @param cmd - \n *\n * @param options - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function exec(cmd: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Content",
              "text": "{\n    silent?: boolean;\n    fatal?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "shell."
            },
            {
              "kind": "Reference",
              "text": "ShellString",
              "canonicalReference": "@types/shelljs!ShellString:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "cmd",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "exec"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!exportGenesisState:function(1)",
          "docComment": "/**\n * @param config - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function exportGenesisState(config: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "exportGenesisState"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!exportGenesisWasm:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function exportGenesisWasm(config: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "exportGenesisWasm"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!generateNodeKey:function(1)",
          "docComment": "/**\n * Generate node key using docker run\n *\n * @param image - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function generateNodeKey(image: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    address: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "image",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "generateNodeKey"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!generateRelayDockerCompose:function(1)",
          "docComment": "/**\n * Generate docker-compose.yml file based on the config\n *\n * @param params - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function generateRelayDockerCompose(config: "
            },
            {
              "kind": "Reference",
              "text": "IRepaConfig",
              "canonicalReference": "@anagolay/repa!IRepaConfig:interface"
            },
            {
              "kind": "Content",
              "text": ", outputAppDir: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", rawSpecsFileName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "outputAppDir",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "rawSpecsFileName",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "generateRelayDockerCompose"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!generateSpecFileName:function(1)",
          "docComment": "/**\n * Generate spec file name\n *\n * @param chainType - \n *\n * @param raw - if true it will add `raw` to the name, if not `plain`\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function generateSpecFileName(chainType: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", raw?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "chainType",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "raw",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "generateSpecFileName"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@anagolay/repa!IAccountForSpec:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IAccountForSpec "
            }
          ],
          "releaseTag": "Public",
          "name": "IAccountForSpec",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@anagolay/repa!IAccountForSpec#aura:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "aura: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyringPair",
                  "canonicalReference": "@polkadot/keyring!KeyringPair:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "aura",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@anagolay/repa!IAccountForSpec#beefy:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beefy: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyringPair",
                  "canonicalReference": "@polkadot/keyring!KeyringPair:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "beefy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@anagolay/repa!IAccountForSpec#grandpa:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grandpa: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyringPair",
                  "canonicalReference": "@polkadot/keyring!KeyringPair:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "grandpa",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@anagolay/repa!IAccountForSpec#stash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stash: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyringPair",
                  "canonicalReference": "@polkadot/keyring!KeyringPair:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!isFalse:function(1)",
          "docComment": "/**\n * checks against the common value options for the false boolean value\n *\n * @param value - Can be `'false' | '0' | 0`\n *\n * @returns Boolean\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isFalse(value: "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isFalse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!isTrue:function(1)",
          "docComment": "/**\n * checks against the common value options for the true boolean value\n *\n * @param value - Can be `'true' | '1' | 1`\n *\n * @returns Boolean\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isTrue(value: "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isTrue"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!readConfig:function(1)",
          "docComment": "/**\n * Sanity checks and read config file\n *\n * @param configName - config name\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function readConfig(configName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IRepaConfig",
              "canonicalReference": "@anagolay/repa!IRepaConfig:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "readConfig"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!relaySessionKeys:function(1)",
          "docComment": "/**\n * Generate session keys in the form of {@link SessionKey}\n *\n * @param suri - Mnemonic phrase\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function relaySessionKeys(suri: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SessionKey",
              "canonicalReference": "@anagolay/repa!SessionKey:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "suri",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "relaySessionKeys"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/repa!updateSpec:function(1)",
          "docComment": "/**\n * Update the specs\n *\n * @param config - \n *\n * @param spec - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function updateSpec(config: "
            },
            {
              "kind": "Reference",
              "text": "IRepaConfig",
              "canonicalReference": "@anagolay/repa!IRepaConfig:interface"
            },
            {
              "kind": "Content",
              "text": ", spec: "
            },
            {
              "kind": "Reference",
              "text": "RelayPlainSpec",
              "canonicalReference": "@anagolay/repa!RelayPlainSpec:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelayPlainSpec",
              "canonicalReference": "@anagolay/repa!RelayPlainSpec:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "spec",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "updateSpec"
        }
      ]
    }
  ]
}
